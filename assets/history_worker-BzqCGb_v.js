(function(){"use strict";self.onmessage=async a=>{const s=a.data.body;let o=null;for await(const[e,t]of s.root.entries())if(s.lib===e){o=t;break}if(o===null){self.postMessage({type:"nodata",body:null,target:a.data.target});return}let i=null;for await(const[e,t]of o.entries())if(s.folder===e){i=t;break}if(i===null){self.postMessage({type:"nodata",body:null,target:a.data.target});return}const r=[];for await(const[e,t]of i.entries()){const f=e.replace(/\.[^/.]+$/,"");if(s.file===f){const l=e.split(".");if(!isNaN(l[1])){let u=await t.getFile();r.push({name:l[0],timestamp:await u.lastModifiedDate.toLocaleString(),version:Number(l[1]),handle:t})}}}if(r.length===0){self.postMessage({type:"nodata",body:null,target:a.data.target});return}r.sort((e,t)=>e.version<t.version?-1:e.version>t.version?1:0);let n=new Map;r.forEach(e=>{let t=e.version+"__"+e.timestamp;n.set(t,e)}),self.postMessage({type:"history",body:n,target:a.data.target})}})();
