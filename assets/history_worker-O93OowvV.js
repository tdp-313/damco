(function(){"use strict";self.onmessage=async r=>{const s=r.data.body;let n=null;for await(const[e,t]of s.root.entries())if(s.lib===e){n=t;break}if(n===null){self.postMessage({type:"nodata",body:null});return}let o=null;for await(const[e,t]of n.entries())if(s.folder===e){o=t;break}if(o===null){self.postMessage({type:"nodata",body:null});return}const a=[];for await(const[e,t]of o.entries()){const f=e.replace(/\.[^/.]+$/,"");if(s.file===f){const i=e.split(".");if(!isNaN(i[1])){let u=await t.getFile();a.push({name:i[0],timestamp:await u.lastModifiedDate.toLocaleString(),version:Number(i[1]),handle:t})}}}if(a.length===0){self.postMessage({type:"nodata",body:null});return}a.sort((e,t)=>e.version<t.version?-1:e.version>t.version?1:0);let l=new Map;a.forEach(e=>{let t=e.version+"__"+e.timestamp;l.set(t,e)}),self.postMessage({type:"history",body:l})}})();
