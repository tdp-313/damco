(function(){"use strict";const u=async t=>{let a=await t.getFile(),n="★";if(a.name.length>3){let o=a.name.substring(a.name.indexOf(".")+1,a.name.length);isNaN(Number(o))||(n=Number(o),n<10&&(n=n))}let e={timestamp:await a.lastModifiedDate.toLocaleString(),text:"",textArray:[],encode:"utf-8",ext:n,handle:t};const f=await(await fetch(URL.createObjectURL(a))).arrayBuffer(),c=new TextDecoder("utf-8").decode(f);let r=c;if(c.includes("�")){const l=new TextDecoder("Shift-JIS").decode(f);l.includes("�")||(r=l,e.encode="Shift-JIS")}if(r==="")return e;e.text=r;let y=r.split(/\r\n|\r|\n/);return e.textArray=y,e};self.onmessage=async t=>{if(t.data.type==="fileOpen"||t.data.type==="fileOpen_change"){self.postMessage({type:t.data.type,body:await u(t.data.body)});return}const s=t.data.body,a=[];for await(const[i,e]of s.entries())if(t.data.kind===e.kind){const d=i.replace(/\.[^/.]+$/,"");a.push({name:d,handle:e,type:e.kind})}a.sort((i,e)=>i.name<e.name?-1:i.name>e.name?1:0);let n=new Map;a.forEach(i=>{n.set(i.name,i.handle)}),self.postMessage({type:t.data.type,body:n})}})();
