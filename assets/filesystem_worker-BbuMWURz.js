(function(){"use strict";const u=async e=>{let a=await e.getFile(),i="★";if(a.name.length>3){let o=a.name.substring(a.name.indexOf(".")+1,a.name.length);isNaN(Number(o))||(i=Number(o),i<10&&(i=i))}let t={timestamp:await a.lastModifiedDate.toLocaleString(),text:"",textArray:[],encode:"utf-8",ext:i,handle:e};const f=await(await fetch(URL.createObjectURL(a))).arrayBuffer(),c=new TextDecoder("utf-8").decode(f);let r=c;if(c.includes("�")){const l=new TextDecoder("Shift-JIS").decode(f);l.includes("�")||(r=l,t.encode="Shift-JIS")}if(r==="")return t;t.text=r;let y=r.split(/\r\n|\r|\n/);return t.textArray=y,t};self.onmessage=async e=>{if(e.data.type==="fileOpen"||e.data.type==="fileOpen_change"){self.postMessage({type:e.data.type,body:await u(e.data.body),target:e.data.target});return}const s=e.data.body,a=[];for await(const[n,t]of s.entries())if(e.data.kind===t.kind){const d=n.replace(/\.[^/.]+$/,"");a.push({name:d,handle:t,type:t.kind})}a.sort((n,t)=>n.name<t.name?-1:n.name>t.name?1:0);let i=new Map;a.forEach(n=>{i.set(n.name,n.handle)}),self.postMessage({type:e.data.type,target:e.data.target,body:i})}})();
